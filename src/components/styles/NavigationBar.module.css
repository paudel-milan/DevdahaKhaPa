/* Using global variables defined in :root */

.navigationBar {
  width: 100%;
  background-color: var(--primary-color, #214175); /* Fallback primary color */
  padding: 12px 30px;
  box-shadow: var(--shadow-strong, 0 0.5rem 1.5rem rgba(0,0,0,0.25)); /* Fallback shadow */
  position: sticky;
  top: 0;
  left: 0;
  z-index: 1000;
  transition: background-color var(--transition-speed-normal, 0.3s ease-in-out);
  box-sizing: border-box; /* Crucial: ensures padding is included in element's total width */
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px; /* Horizontal padding for desktop content */
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap; /* IMPORTANT: Allows navContent and hamburger to wrap if necessary */
  /* No gap here, as navContent and hamburger will have their own spacing/margins */
}

/* Hamburger button - Hidden on desktop */
.hamburger {
  display: none;
  background: none;
  border: none;
  font-size: 1.8em;
  color: var(--text-light, #FFFFFF);
  cursor: pointer;
  padding: 5px;
  z-index: 1020; /* Ensure it's above the sliding menu */
  /* Remove right: 15px; from here, it should be controlled by flexbox on mobile */
}

.navContent {
  display: flex;
  align-items: center;
  gap: 30px; /* Space between navLinks and ctaButton on desktop */
  flex-grow: 1; /* Allows navContent to take available space */
  justify-content: space-between; /* Pushes navLinks left, ctaButton right */
  min-width: 0; /* Important: Allows flex items inside (navLinks, ctaButton) to shrink */

  /* Ensure this starts on full width when wrapped, before fixed positioning */
  flex-basis: auto; /* Allow sizing naturally */
}

.navLinks {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  gap: 25px; /* Space between main navigation items */
  flex-wrap: wrap; /* IMPORTANT: Allows individual nav links to wrap if needed on desktop */
  min-width: 0; /* Crucial: Allows links to potentially shrink if their parent (.navContent) is shrinking */
}

.navLink {
  text-decoration: none;
  color: var(--text-light, #FFFFFF);
  font-size: 1em;
  font-weight: 600;
  padding: 8px 0;
  position: relative;
  transition: color var(--transition-speed-fast, 0.2s ease-in-out);
  display: flex;
  align-items: center;
  white-space: nowrap; /* Keep individual link text on one line (usually desired) */
  /* No min-width needed here as the parent .navLinks has flex-wrap */
}

.navLink::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0;
  height: 2px;
  background-color: var(--accent-color, #EE8C19);
  transition: width var(--transition-speed-fast, 0.2s ease-in-out);
}

.navLink:hover {
  color: var(--accent-color, #EE8C19);
}

.navLink:hover::after {
  width: 100%;
}

.ctaButton {
  background-color: var(--accent-color, #EE8C19);
  color: var(--text-light, #FFFFFF);
  padding: 10px 24px;
  border-radius: 5px;
  font-weight: 700;
  box-shadow: var(--shadow-strong, 0 0.5rem 1.5rem rgba(0,0,0,0.25));
  transition: background-color var(--transition-speed-fast, 0.2s ease-in-out), transform var(--transition-speed-fast, 0.2s ease-in-out), box-shadow var(--transition-speed-fast, 0.2s ease-in-out);
  border: none;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  white-space: nowrap; /* Prevent text wrapping inside button */
  cursor: pointer;
  flex-shrink: 0; /* Prevent button from shrinking */
}

.ctaButton:hover {
  background-color: var(--accent-dark-color, #D57E15);
  transform: translateY(-2px);
  box-shadow: 0 0.6rem 1.2rem rgba(0, 0, 0, 0.35); /* Using your original large shadow on hover */
}

.dropdown {
  position: relative;
}

.dropdownArrow {
  font-size: 0.55em;
  margin-left: 6px;
  transform: rotate(0deg);
  transition: transform var(--transition-speed-fast, 0.2s ease-in-out);
  color: var(--text-light, #FFFFFF);
}

.dropdown:hover .dropdownArrow {
  transform: rotate(180deg);
  color: var(--accent-color, #EE8C19);
}

.dropdownMenu {
  list-style: none;
  margin: 0;
  padding: 8px 0;
  position: absolute;
  top: calc(100% + 10px);
  left: 0;
  background-color: var(--bg-light, #FFFFFF);
  box-shadow: var(--shadow-strong, 0 0.5rem 1.5rem rgba(0,0,0,0.25));
  min-width: 180px;
  border-radius: 6px;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: opacity var(--transition-speed-normal, 0.3s ease-in-out), transform var(--transition-speed-normal, 0.3s ease-in-out), visibility var(--transition-speed-normal, 0.3s ease-in-out);
  z-index: 100;
  border-top: 4px solid var(--primary-color, #214175);
}

.dropdown:hover .dropdownMenu {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.dropdownItem {
  display: block;
  padding: 10px 20px;
  text-decoration: none;
  color: var(--text-dark, #333333);
  font-size: 0.95em;
  white-space: nowrap;
  transition: background-color var(--transition-speed-fast, 0.2s ease-in-out), color var(--transition-speed-fast, 0.2s ease-in-out);
  font-weight: 500;
}

.dropdownItem:hover {
  background-color: var(--bg-alternate, #F8F9FA);
  color: var(--primary-color, #214175);
}


/* --- Mobile Menu --- */
/* Breakpoint should match the JS mobileBreakpoint variable (992px from your component) */
@media (max-width: 992px) {
  .navigationBar {
    padding: 8px 20px;
    display: flex; /* Ensure navigationBar is a flex container on mobile */
    justify-content: flex-start; /* Start items from the left */
    align-items: center;
  }
  .container {
    padding: 0; /* Remove horizontal padding as it's handled by navigationBar padding */
    width: 100%; /* Ensure container takes full width within navBar */
    justify-content: flex-start; /* Hamburger will dictate alignment */
  }

  .hamburger {
    display: block; /* Show hamburger button on mobile */
    order: -1; /* Place it at the very beginning of the flex row */
    margin-right: auto; /* Pushes the navContent to the right (off-screen initially) */
  }

  .navContent {
    position: fixed;
    top: 0;
    right: -100%; /* Start off-screen to the right */
    width: 75%; /* Mobile menu width */
    max-width: 320px; /* Max width for consistency across larger phones */
    height: 100vh; /* Full viewport height */
    background-color: var(--primary-color, #214175); /* Match navbar background */
    box-shadow: -5px 0 15px rgba(0,0,0,0.4); /* Shadow for sliding effect */
    flex-direction: column; /* Stack menu items vertically */
    justify-content: flex-start; /* Align items to the top */
    padding: 70px 0 15px; /* Top padding for space (e.g., for close button if added visually) */
    transition: right 0.3s ease-out; /* Smooth sliding animation */
    z-index: 1015; /* Above page content, below hamburger icon */
    overflow-y: auto; /* Enable scrolling for long menus */
    align-items: flex-start; /* Align menu items to the left within the panel */
    gap: 0; /* Remove gap from desktop styles */
  }

  .navContent.open {
    right: 0; /* Slide in when 'open' class is applied */
  }

  .navLinks {
    flex-direction: column; /* Stack links vertically */
    gap: 0; /* No gap between li items; padding on navLink will create spacing */
    width: 100%; /* Full width for links */
    align-items: flex-start; /* Align text to the left */
    margin-top: 15px;
  }

  .navLinks li {
    width: 100%; /* Ensure list items take full width */
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Separator for mobile links */
  }
  .navLinks li:last-child {
    border-bottom: none; /* No border on the last item */
  }

  .navLink {
    padding: 15px 20px; /* Larger clickable area for mobile */
    font-size: 1.1em;
    width: 100%; /* Ensure link takes full width of list item */
    text-align: left;
  }

  .navLink::after {
    left: 20px; /* Adjust underline position to match mobile padding */
    width: calc(100% - 40px); /* Adjust underline width to span the actual text area */
  }
  .navLink:hover::after {
    width: calc(100% - 40px); /* Maintain full width on hover */
  }

  /* Mobile Dropdown Styling (Accordion effect) */
  .dropdownMenu {
    position: static; /* Remove absolute positioning */
    box-shadow: none; /* No shadow for nested menu */
    background-color: rgba(0,0,0,0.1); /* Slightly translucent background for nested items */
    padding: 0; /* Controlled by max-height for accordion effect */
    margin-top: 0; /* No margin from parent link */
    opacity: 1; /* Always visible when active (controlled by max-height) */
    visibility: visible; /* Always visible when active */
    transform: translateY(0); /* No transform */
    max-height: 0; /* Initially hidden */
    overflow: hidden; /* Hide overflow for smooth slide */
    transition: max-height 0.3s ease-out, padding 0.3s ease-out; /* Smooth transition */
    border-top: none; /* No accent border for nested dropdown */
    border-radius: 0; /* No border-radius for nested menu */
  }

  .dropdownActiveMobile .dropdownMenu {
    max-height: 200px; /* Sufficient height for menu items (adjust as needed) */
    padding: 8px 0; /* Apply padding when open */
  }

  .dropdownItem {
    padding: 10px 40px; /* Increased indent for nested items */
    font-size: 1em;
    color: var(--text-light, #FFFFFF); /* Inherit light text color */
  }
  .dropdownItem:hover {
    background-color: rgba(0,0,0,0.2); /* Darker background on hover for nested items */
    color: var(--accent-color, #EE8C19);
  }

  /* Rotate arrow for mobile dropdown when active */
  .dropdownArrow {
    transition: transform var(--transition-speed-fast, 0.2s ease-in-out);
  }
  .dropdownActiveMobile .dropdownArrow {
    transform: rotate(180deg);
  }
  /* Ensure desktop hover behavior is reset for mobile */
  .dropdown:hover .dropdownArrow {
    transform: none;
    color: var(--text-light);
  }
  .dropdown:hover .dropdownMenu {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
  }

  /* Call to Action Button in Mobile Menu */
  .ctaButton {
    margin-left: 0; /* Remove desktop margin */
    width: calc(100% - 40px); /* Full width minus horizontal padding */
    margin: 25px auto; /* Center horizontally */
    padding: 12px 20px;
    font-size: 1.1em;
    text-align: center;
    box-shadow: var(--shadow-small, 0 2px 5px rgba(0,0,0,0.1)); /* Lighter shadow for mobile button */
  }
  .ctaButton:hover {
    transform: none; /* Remove lift effect on mobile for better touch experience */
    background-color: var(--accent-color, #EE8C19); /* Keep original background on hover */
    box-shadow: var(--shadow-small, 0 2px 5px rgba(0,0,0,0.1)); /* Keep consistent shadow on hover */
  }
}

/* Adjustments for smaller mobile devices */
@media (max-width: 480px) {
  .navigationBar {
    padding: 6px 15px;
  }
  .hamburger {
    font-size: 1.6em;
  }
  .navContent {
    width: 85%; /* Slightly wider menu for tiny screens */
    max-width: 280px; /* Smaller max width for very small screens */
    padding: 60px 0 10px;
  }
  .navLink {
    font-size: 1em;
    padding: 12px 18px;
  }
  .navLink::after {
    left: 18px;
    width: calc(100% - 36px);
  }
  .navLink:hover::after {
    width: calc(100% - 36px);
  }
  .ctaButton {
    padding: 10px 18px;
    font-size: 1em;
  }
  .dropdownItem {
    font-size: 0.9em;
    padding: 8px 30px;
  }
  .dropdownActiveMobile .dropdownMenu {
    max-height: 150px;
  }
}